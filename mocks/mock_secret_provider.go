// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gosom/secretstash (interfaces: SecretProvider)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/mock_secret_provider.go -package=mocks . SecretProvider
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSecretProvider is a mock of SecretProvider interface.
type MockSecretProvider struct {
	ctrl     *gomock.Controller
	recorder *MockSecretProviderMockRecorder
}

// MockSecretProviderMockRecorder is the mock recorder for MockSecretProvider.
type MockSecretProviderMockRecorder struct {
	mock *MockSecretProvider
}

// NewMockSecretProvider creates a new mock instance.
func NewMockSecretProvider(ctrl *gomock.Controller) *MockSecretProvider {
	mock := &MockSecretProvider{ctrl: ctrl}
	mock.recorder = &MockSecretProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretProvider) EXPECT() *MockSecretProviderMockRecorder {
	return m.recorder
}

// GetSecret mocks base method.
func (m *MockSecretProvider) GetSecret(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockSecretProviderMockRecorder) GetSecret(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockSecretProvider)(nil).GetSecret), arg0)
}
